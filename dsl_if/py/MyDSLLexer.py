# Generated from MyDSL.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,24,131,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,1,0,1,0,1,0,1,0,1,1,1,
        1,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,
        7,1,7,1,7,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,
        1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,16,1,17,1,17,1,17,1,18,
        1,18,1,18,1,19,1,19,1,19,1,20,1,20,5,20,106,8,20,10,20,12,20,109,
        9,20,1,21,4,21,112,8,21,11,21,12,21,113,1,22,1,22,5,22,118,8,22,
        10,22,12,22,121,9,22,1,22,1,22,1,23,4,23,126,8,23,11,23,12,23,127,
        1,23,1,23,0,0,24,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,
        11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,
        22,45,23,47,24,1,0,5,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,
        97,122,1,0,48,57,1,0,34,34,3,0,9,10,13,13,32,32,134,0,1,1,0,0,0,
        0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
        1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
        1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
        1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,
        1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,1,49,1,0,0,0,3,53,1,0,0,0,5,55,
        1,0,0,0,7,57,1,0,0,0,9,60,1,0,0,0,11,62,1,0,0,0,13,64,1,0,0,0,15,
        69,1,0,0,0,17,75,1,0,0,0,19,77,1,0,0,0,21,79,1,0,0,0,23,81,1,0,0,
        0,25,83,1,0,0,0,27,85,1,0,0,0,29,87,1,0,0,0,31,89,1,0,0,0,33,91,
        1,0,0,0,35,94,1,0,0,0,37,97,1,0,0,0,39,100,1,0,0,0,41,103,1,0,0,
        0,43,111,1,0,0,0,45,115,1,0,0,0,47,125,1,0,0,0,49,50,5,108,0,0,50,
        51,5,101,0,0,51,52,5,116,0,0,52,2,1,0,0,0,53,54,5,61,0,0,54,4,1,
        0,0,0,55,56,5,59,0,0,56,6,1,0,0,0,57,58,5,105,0,0,58,59,5,102,0,
        0,59,8,1,0,0,0,60,61,5,123,0,0,61,10,1,0,0,0,62,63,5,125,0,0,63,
        12,1,0,0,0,64,65,5,101,0,0,65,66,5,108,0,0,66,67,5,115,0,0,67,68,
        5,101,0,0,68,14,1,0,0,0,69,70,5,112,0,0,70,71,5,114,0,0,71,72,5,
        105,0,0,72,73,5,110,0,0,73,74,5,116,0,0,74,16,1,0,0,0,75,76,5,40,
        0,0,76,18,1,0,0,0,77,78,5,41,0,0,78,20,1,0,0,0,79,80,5,43,0,0,80,
        22,1,0,0,0,81,82,5,45,0,0,82,24,1,0,0,0,83,84,5,42,0,0,84,26,1,0,
        0,0,85,86,5,47,0,0,86,28,1,0,0,0,87,88,5,62,0,0,88,30,1,0,0,0,89,
        90,5,60,0,0,90,32,1,0,0,0,91,92,5,61,0,0,92,93,5,61,0,0,93,34,1,
        0,0,0,94,95,5,33,0,0,95,96,5,61,0,0,96,36,1,0,0,0,97,98,5,62,0,0,
        98,99,5,61,0,0,99,38,1,0,0,0,100,101,5,60,0,0,101,102,5,61,0,0,102,
        40,1,0,0,0,103,107,7,0,0,0,104,106,7,1,0,0,105,104,1,0,0,0,106,109,
        1,0,0,0,107,105,1,0,0,0,107,108,1,0,0,0,108,42,1,0,0,0,109,107,1,
        0,0,0,110,112,7,2,0,0,111,110,1,0,0,0,112,113,1,0,0,0,113,111,1,
        0,0,0,113,114,1,0,0,0,114,44,1,0,0,0,115,119,5,34,0,0,116,118,8,
        3,0,0,117,116,1,0,0,0,118,121,1,0,0,0,119,117,1,0,0,0,119,120,1,
        0,0,0,120,122,1,0,0,0,121,119,1,0,0,0,122,123,5,34,0,0,123,46,1,
        0,0,0,124,126,7,4,0,0,125,124,1,0,0,0,126,127,1,0,0,0,127,125,1,
        0,0,0,127,128,1,0,0,0,128,129,1,0,0,0,129,130,6,23,0,0,130,48,1,
        0,0,0,5,0,107,113,119,127,1,6,0,0
    ]

class MyDSLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    ID = 21
    NUMBER = 22
    STRING = 23
    WS = 24

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'let'", "'='", "';'", "'if'", "'{'", "'}'", "'else'", "'print'", 
            "'('", "')'", "'+'", "'-'", "'*'", "'/'", "'>'", "'<'", "'=='", 
            "'!='", "'>='", "'<='" ]

    symbolicNames = [ "<INVALID>",
            "ID", "NUMBER", "STRING", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "ID", "NUMBER", "STRING", "WS" ]

    grammarFileName = "MyDSL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


