2025-02-26 19:48:53:665 grammar LogManager.java:25 before: (COMBINED_GRAMMAR MyDSL (RULES (RULE prog (BLOCK (ALT assign EOF))) (RULE assign (BLOCK (ALT 'this' '=' 'match' '(' IDENT ')' '{' cases '}'))) (RULE cases (BLOCK (ALT case (* (BLOCK (ALT ',' case)))))) (RULE case (BLOCK (ALT '(' pattern ')' '=>' IDENT))) (RULE pattern (BLOCK (ALT HEX) (ALT '_'))) (RULE HEX (BLOCK (ALT '0x' (+ (BLOCK (ALT [0-9a-fA-F])))))) (RULE IDENT (BLOCK (ALT [a-zA-Z_] (* (BLOCK (ALT [a-zA-Z0-9_])))))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip)))))
2025-02-26 19:48:53:680 grammar LogManager.java:25 after: (COMBINED_GRAMMAR MyDSL (RULES (RULE prog (BLOCK (ALT assign EOF))) (RULE assign (BLOCK (ALT 'this' '=' 'match' '(' IDENT ')' '{' cases '}'))) (RULE cases (BLOCK (ALT case (* (BLOCK (ALT ',' case)))))) (RULE case (BLOCK (ALT '(' pattern ')' '=>' IDENT))) (RULE pattern (BLOCK (ALT (SET HEX '_')))) (RULE HEX (BLOCK (ALT '0x' (+ (BLOCK (ALT [0-9a-fA-F])))))) (RULE IDENT (BLOCK (ALT [a-zA-Z_] (* (BLOCK (ALT [a-zA-Z0-9_])))))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip)))))
2025-02-26 19:48:53:710 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR MyDSL (RULES (RULE prog (BLOCK (ALT assign EOF))) (RULE assign (BLOCK (ALT 'this' '=' 'match' '(' IDENT ')' '{' cases '}'))) (RULE cases (BLOCK (ALT case (* (BLOCK (ALT ',' case)))))) (RULE case (BLOCK (ALT '(' pattern ')' '=>' IDENT))) (RULE pattern (BLOCK (ALT (SET HEX '_'))))))
2025-02-26 19:48:53:711 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR MyDSLLexer (RULES (RULE T__0 (BLOCK (ALT 'this'))) (RULE T__1 (BLOCK (ALT '='))) (RULE T__2 (BLOCK (ALT 'match'))) (RULE T__3 (BLOCK (ALT '('))) (RULE T__4 (BLOCK (ALT ')'))) (RULE T__5 (BLOCK (ALT '{'))) (RULE T__6 (BLOCK (ALT '}'))) (RULE T__7 (BLOCK (ALT ','))) (RULE T__8 (BLOCK (ALT '=>'))) (RULE T__9 (BLOCK (ALT '_'))) (RULE HEX (BLOCK (ALT '0x' (+ (BLOCK (ALT [0-9a-fA-F])))))) (RULE IDENT (BLOCK (ALT [a-zA-Z_] (* (BLOCK (ALT [a-zA-Z0-9_])))))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip)))))
2025-02-26 19:48:53:941 semantics LogManager.java:25 tokens={EOF=-1, T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, T__9=10, HEX=11, IDENT=12, WS=13}
2025-02-26 19:48:53:941 semantics LogManager.java:25 strings={'this'=1, '='=2, 'match'=3, '('=4, ')'=5, '{'=6, '}'=7, ','=8, '=>'=9, '_'=10}
2025-02-26 19:48:53:952 LL1 LogManager.java:25 
DECISION 0 in rule cases
2025-02-26 19:48:53:955 LL1 LogManager.java:25 look=[8, 7]
2025-02-26 19:48:53:956 LL1 LogManager.java:25 LL(1)? true
